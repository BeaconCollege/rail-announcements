import StationAnnouncementSystem from '@announcement-data/StationAnnouncementSystem'
import CallingAtSelector, { CallingAtPoint } from '@components/CallingAtSelector'
import CustomAnnouncementPane, { ICustomAnnouncementPreset } from '@components/PanelPanes/CustomAnnouncementPane'
import CustomButtonPane from '@components/PanelPanes/CustomButtonPane'
import { AllStationsTitleValueMap } from '@data/StationManipulators'
import crsToStationItemMapper, { stationItemCompleter } from '@helpers/crsToStationItemMapper'
import { AudioItem, CustomAnnouncementTab } from '../../AnnouncementSystem'

type ChimeType = /*'3' |*/ 'four' | 'none'

interface INextTrainAnnouncementOptions {
  chime: ChimeType
  platform: string
  hour: string
  min: string
  toc: string
  terminatingStationCode: string
  vias: CallingAtPoint[]
  callingAt: CallingAtPoint[]
  coaches: string
}

export default class KeTechPhil extends StationAnnouncementSystem {
  readonly NAME = 'KeTech - Phil Sayer'
  readonly ID = 'KETECH_PHIL_V1'
  readonly FILE_PREFIX = 'station/ketech/phil'
  readonly SYSTEM_TYPE = 'station'

  private get announcementPresets(): Readonly<Record<string, ICustomAnnouncementPreset[]>> {
    return {
      nextTrain: [
        {
          name: '12:28 | SN Littlehampton to Brighton',
          state: {
            chime: 'four',
            platform: '2',
            hour: '12',
            min: '28',
            toc: 'southern',
            terminatingStationCode: 'BTN',
            vias: [],
            callingAt: ['ANG', 'GBS', 'DUR', 'WWO', 'WRH', 'SWK', 'PLD', 'HOV'].map(crsToStationItemMapper),
            coaches: '8 coaches',
          },
        },
        {
          name: '17:15 | GX Brighton to London Victoria',
          state: {
            chime: 'four',
            platform: '5',
            hour: '17',
            min: '15',
            toc: 'gatwick express',
            terminatingStationCode: 'VIC',
            vias: ['GTW'].map(crsToStationItemMapper),
            callingAt: ['PRP', 'HSK', 'BUG', 'HHE', 'GTW'].map(crsToStationItemMapper),
            coaches: '8 coaches',
          },
        },
        {
          name: '11:18 | VT Euston to Edinburgh',
          state: {
            chime: 'four',
            platform: '6',
            hour: '11',
            min: '18',
            toc: 'virgin pendolino',
            terminatingStationCode: 'EDB',
            vias: ['BHM'].map(crsToStationItemMapper),
            callingAt: [
              'MKC',
              'RUG',
              'COV',
              'BHI',
              'BHM',
              'SAD',
              'WVH',
              'STA',
              'CRE',
              'WBQ',
              'WGN',
              'PRE',
              'LAN',
              'PNR',
              'CAR',
              { crsCode: 'HYM', shortPlatform: this.getValueForShortPlatform('front 10 coaches') },
            ].map(stationItemCompleter),
            coaches: '11 coaches',
          },
        },
        {
          name: '08:20 | XC Aberdeen to Penzance',
          state: {
            chime: 'four',
            platform: '3',
            hour: '08',
            min: '20',
            toc: 'crosscountry',
            terminatingStationCode: 'PNZ',
            vias: ['LDS'].map(crsToStationItemMapper),
            callingAt: [
              'STN',
              'MTS',
              'ARB',
              'DEE',
              'LEU',
              'CUP',
              'LDY',
              'MNC',
              'KDY',
              'INK',
              'HYM',
              'EDB',
              'BWK',
              'ALM',
              'NCL',
              'DHM',
              'DAR',
              'YRK',
              'LDS',
              'WKF',
              'SHF',
              'DBY',
              'BUT',
              'BHM',
              'CNM',
              'BPW',
              'BRI',
              'TAU',
              'TVP',
              'EXD',
              'NTA',
              'TOT',
              'PLY',
              'LSK',
              'BOD',
              'SAU',
              'TRU',
              'RED',
              'SER',
            ].map(crsToStationItemMapper),
            coaches: '5 coaches',
          },
        },
        {
          // http://www.1s76.com/1S76%202008.htm
          name: '08:20 | 1O23 XC Manchester to Brighton (2008)',
          state: {
            chime: 'four',
            platform: '3',
            hour: '08',
            min: '20',
            toc: 'crosscountry',
            terminatingStationCode: 'BTN',
            vias: ['BHM', 'KPA'].map(crsToStationItemMapper),
            callingAt: ['SPT', 'MAC', 'CNG', 'SOT', 'WVH', 'BHM', 'LMS', 'BAN', 'OXF', 'RDG', 'KPA', 'ECR', 'GTW', 'HHE'].map(
              crsToStationItemMapper,
            ),
            coaches: '5 coaches',
          },
        },
        {
          name: '18:07 | Chiltern MYB - Stourbridge',
          state: {
            chime: 'four',
            platform: '2',
            hour: '18',
            min: '07',
            toc: 'chiltern railways',
            terminatingStationCode: 'SBJ',
            vias: [],
            callingAt: ['HDM', 'BCS', 'BAN', 'LMS', 'WRW', 'WRP', 'DDG', 'SOL', 'BMO', 'BSW', 'ROW'].map(crsToStationItemMapper),
            coaches: '5 coaches',
          },
        },
        {
          name: '12:50 | SN Eastbourne - Ashford',
          state: {
            chime: 'four',
            platform: '2',
            hour: '12',
            min: '50',
            toc: 'southern',
            terminatingStationCode: 'AFK',
            vias: [],
            callingAt: [
              'HMD',
              'COB',
              'PEV',
              'CLL',
              'BEX',
              'SLQ',
              'HGS',
              'ORE',
              { crsCode: 'TOK', shortPlatform: this.getValueForShortPlatform('front coach') },
              'WSE',
              'RYE',
              { crsCode: 'APD', shortPlatform: this.getValueForShortPlatform('front 2 coaches') },
              'HMT',
            ].map(stationItemCompleter),
            coaches: '3 coaches',
          },
        },
      ],
    }
  }

  private AVAILABLE_TOCS = [
    'a replacement bus',
    'additional',
    'additional Chiltern Railways',
    'additional football special',
    'Alphaline',
    'Anglia Railways',
    'Anglia Railways Train',
    'Arriva Crosscountry',
    'Arriva Trains Merseyside',
    'Arriva Trains Northern',
    'Arriva Trains Northern',
    'Arriva Trains Wales',
    'Blackheath and Woolwich',
    'Blackheath and Woolwich Arsenal',
    'Blackheath and Woolwich Arsenal Line',
    'c2c',
    'c2c Rail',
    'Cardiff Railways',
    'Central Trains',
    'Charter',
    'Chiltern Line',
    'Chiltern Railway Company',
    'Chiltern Railways',
    'Chiselhurst and Maidstone East',
    'Chiselhurst and Maidstone East Line',
    'Chiselhurst Sevenoaks and Canterbury West',
    'Chiselhurst Sevenoaks and Canterbury West Line',
    'Connex',
    'Connex Express',
    'Connex Metro',
    'Connex Racecourse Special',
    'Connex Rail',
    'Connex South Central',
    'Connex South Eastern',
    'Country',
    'Crosscountry',
    'diverted',
    'East Midlands',
    'Eurostar',
    'express',
    'First Capital Connect',
    'First Great Western',
    'First Great Western Adelante',
    'First Great Western Atlantic Coast Express',
    'First Great Western Bristolian',
    'First Great Western Cathedrals Express',
    'First Great Western Cheltenham Flier',
    'First Great Western Cheltenham Spa Express',
    'First Great Western Cornish Riviera',
    'First Great Western Devon Belle',
    'First Great Western Golden Hind',
    'First Great Western Hibernian',
    'First Great Western High Speed',
    'First Great Western Intercity',
    'First Great Western Link',
    'First Great Western Mayflower',
    'First Great Western Merchant Venturer',
    'First Great Western Motorail',
    'First Great Western Night Riviera',
    'First Great Western Pembroke Coast Express',
    'First Great Western Red Dragon',
    'First Great Western Royal Duchy',
    'First Great Western Royal Wessex',
    'First Great Western St David',
    'First Great Western Torbay Express',
    'First Transpennine Express',
    'First Transpennine Service',
    'football special',
    'for seat reservations holders only',
    'Gatwick Express',
    'GNER',
    'Grand Central',
    'Great Eastern',
    'Great Eastern Railway',
    'Great North Eastern Railway',
    'Great North Eastern Railways',
    'Great North Eastern Railways White Rose',
    'Great North Eastern Railways Yorkshire Pullman',
    'Great Northern',
    'Great Western',
    'Heathrow Express',
    'Holidaymaker',
    'Holidaymaker Express',
    'Hull Trains',
    'Island Line',
    'London Midland',
    'London Midland City',
    'London Midland Express',
    'London Overground',
    'London Transport Buses',
    'London Underground',
    'LTS Rail',
    'Maidstone East and Ashford International Line',
    'Maidstone East and Ashford Line',
    'Maidstone East and Canterbury West Line',
    'Maidstone East and Dover Priory Line',
    'Merseyside Electrics',
    'Midland Mainline',
    'Midland Mainline High Speed Train',
    'Midland Mainline Turbostar',
    'National Express',
    'National Express East Coast',
    'New Southern Railway',
    'New Southern Railway Brighton Express',
    'North London Railway',
    'Northern Rail',
    'Northern Spirit',
    'One',
    'One Anglia',
    'Orient Express',
    'private charter train',
    'Racecourse Special',
    'replacement bus',
    'return charter train',
    'rugby special',
    'ScotRail',
    'ScotRail Railways',
    'Silverlink County',
    'Silverlink Metro',
    'South Central',
    'South Central Trains',
    'South West Trains',
    'Southeastern',
    'Southeastern Trains',
    'Southern',
    'Southern Railway',
    'Southern Railway Brighton Express',
    'special charter',
    'Stansted Express',
    'steam charter train',
    'stopping',
    'Tarka Line',
    'Thames Trains',
    'Thameslink',
    'Thameslink City Flier',
    'Thameslink City Metro',
    'The Mid Hants Steam Railway',
    'The National Express East Coast',
    'The Swanage Railway',
    'The Watercress Line',
    'The Yorkshire Pullman',
    'Tramlink',
    'Tyne and Wear Metro',
    'Valley Lines',
    'Virgin Pendolino',
    'Virgin Trains',
    'Virgin Trains Armada',
    'Virgin Trains Cornish Scot',
    'Virgin Trains Cornishman',
    'Virgin Trains Cross Country',
    'Virgin Trains Devon Scot',
    'Virgin Trains Devonian',
    'Virgin Trains Dorset Scot',
    'Virgin Trains Midland Scot',
    'Virgin Trains Pines Express',
    'Virgin Trains Sussex Scot',
    'Virgin Trains Wessex Scot',
    'Virgin Voyager',
    'wagon',
    'Wales and Borders',
    'Wales and West',
    'Wales and West Alphaline',
    'Wales and West Weymouth Sand and Cycle Explorer',
    'Wessex',
    'West Anglia',
    'West Anglia Great Northern Railway',
    'West Anglia Great Northern Railways',
    'West Coast Railway Company',
    'White Rose',
    'Yorkshire Pullman',
  ] as const

  private async getFilesForBasicTrainInfo(
    hour: string,
    min: string,
    toc: string,
    vias: string[],
    terminatingStation: string,
  ): Promise<AudioItem[]> {
    const files: AudioItem[] = [
      `hour.s.${hour}`,
      `mins.m.${min}`,
      {
        id: toc === '' ? `m.service to` : `toc.m.${toc.toLowerCase()} service to`,
        opts: { delayStart: toc === '' ? 50 : 150 },
      },
    ]

    if (vias.length !== 0) {
      files.push(
        `station.m.${terminatingStation}`,
        'm.via',
        ...this.pluraliseAudio(
          vias.map((stn, i) => ({
            id: `station.${i === vias.length - 1 ? 'e' : 'm'}.${stn}`,
          })),
          100,
          {
            andId: 'm.and',
          },
        ),
      )
    } else {
      files.push(`station.e.${terminatingStation}`)
    }

    return files
  }

  private async getShortPlatforms(callingPoints: CallingAtPoint[]): Promise<AudioItem[]> {
    const files: AudioItem[] = []

    const shortPlatforms = callingPoints.reduce(
      (acc, curr) => {
        if (!curr.shortPlatform) return acc

        if (acc[curr.shortPlatform]) {
          acc[curr.shortPlatform].push(curr.crsCode)
        } else {
          acc[curr.shortPlatform] = [curr.crsCode]
        }

        return acc
      },
      {} as Record<string, string[]>,
    )

    const order = this.shortPlatforms.map(x => x.value)

    let firstAdded = false

    order.forEach(s => {
      if (!shortPlatforms[s]) return

      files.push(
        { id: firstAdded ? 's.customers for' : 's.due to short platforms customers for', opts: { delayStart: 200 } },
        ...this.pluraliseAudio(
          shortPlatforms[s].map(crs => ({ id: crs, opts: { delayStart: 100 } })),
          100,
          {
            prefix: 'station.m.',
            finalPrefix: 'station.m.',
            andId: 'm.and',
          },
        ),
        ...s.split(','),
      )

      firstAdded = true
    })

    return files
  }

  private async getRequestStops(callingPoints: CallingAtPoint[]): Promise<AudioItem[]> {
    const files: AudioItem[] = []

    const reqStops = callingPoints.filter(s => s.requestStop)
    if (reqStops.length === 0) return []

    files.push(
      ...this.pluraliseAudio(
        reqStops.map((s, i) => ({ id: s.crsCode, opts: { delayStart: i === 0 ? 400 : 100 } })),
        100,
        { prefix: 'station.m.', finalPrefix: 'station.m.', andId: 'm.and' },
      ),
      reqStops.length === 1 ? 'm.is a request stop and customers for this station' : 'm.are request stops and customers for these stations',
      'm.should ask the conductor on the train to arrange for the train to stop',
      'e.to allow them to alight',
    )

    return files
  }

  private async playNextTrainAnnouncement(options: INextTrainAnnouncementOptions, download: boolean = false): Promise<void> {
    const files: AudioItem[] = []

    if (options.chime !== 'none') files.push(`sfx - ${options.chime} chimes`)

    files.push(
      `s.platform ${options.platform} for the`,
      ...(await this.getFilesForBasicTrainInfo(
        options.hour,
        options.min,
        options.toc,
        options.vias.map(s => s.crsCode),
        options.terminatingStationCode,
      )),
    )

    files.push({ id: 'm.calling at', opts: { delayStart: 750 } })

    if (options.callingAt.length === 0) {
      files.push(`station.m.${options.terminatingStationCode}`, 'e.only')
    } else {
      files.push(
        ...this.pluraliseAudio(
          [
            ...options.callingAt.map(stn => ({ id: `station.m.${stn.crsCode}`, opts: { delayStart: 100 } })),
            `station.e.${options.terminatingStationCode}`,
          ],
          100,
          {
            andId: 'm.and',
          },
        ),
      )
    }

    files.push(...(await this.getShortPlatforms(options.callingAt)))
    files.push(...(await this.getRequestStops(options.callingAt)))

    const coaches = options.coaches.split(' ')[0]

    // Platforms share the same audio as coach numbers
    files.push(
      { id: 's.this train is formed of', opts: { delayStart: 250 } },
      `platform.s.${coaches}`,
      `e.${coaches == '1' ? 'coach' : 'coaches'}`,
    )

    files.push(
      { id: `s.platform ${options.platform} for the`, opts: { delayStart: 250 } },
      ...(await this.getFilesForBasicTrainInfo(
        options.hour,
        options.min,
        options.toc,
        options.vias.map(s => s.crsCode),
        options.terminatingStationCode,
      )),
    )

    await this.playAudioFiles(files, download)
  }

  private platforms = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].flatMap(x => [`${x}`, `${x}a`, `${x}b`, `${x}c`, `${x}d`])
  private stations = [
    'AAP',
    'AAT',
    'ABA',
    'ABC',
    'ABD',
    'ABE',
    'ABH',
    'ABW',
    'ABY',
    'ACB',
    'ACC',
    'ACG',
    'ACH',
    'ACK',
    'ACL',
    'ACN',
    'ACR',
    'ACT',
    'ADC',
    'ADD',
    'ADK',
    'ADL',
    'ADM',
    'ADN',
    'ADR',
    'ADS',
    'ADV',
    'ADW',
    'AFK',
    'AFS',
    'AFV',
    'AGL',
    'AGS',
    'AGT',
    'AGV',
    'AHD',
    'AHN',
    'AHS',
    'AHT',
    'AHV',
    'AIG',
    'AIN',
    'AIR',
    'ALB',
    'ALD',
    'ALF',
    'ALK',
    'ALM',
    'ALN',
    'ALP',
    'ALR',
    'ALT',
    'ALV',
    'ALW',
    'ALX',
    'AMB',
    'AMF',
    'AML',
    'AMR',
    'AMT',
    'AMY',
    'ANC',
    'AND',
    'ANF',
    'ANG',
    'ANL',
    'ANN',
    'ANS',
    'ANZ',
    'AON',
    'APB',
    'APD',
    'APF',
    'APG',
    'APP',
    'APS',
    'ARB',
    'ARD',
    'ARG',
    'ARL',
    'ARM',
    'ARN',
    'ARR',
    'ART',
    'ARU',
    'ASB',
    'ASC',
    'ASG',
    'ASH',
    'ASK',
    'ASN',
    'ASP',
    'ASS',
    'AST',
    'ASY',
    'ATB',
    'ATH',
    'ATL',
    'ATN',
    'ATT',
    'AUD',
    'AUG',
    'AUI',
    'AUR',
    'AUW',
    'AVF',
    'AVM',
    'AVN',
    'AVY',
    'AWK',
    'AWM',
    'AWT',
    'AXM',
    'AXP',
    'AYH',
    'AYL',
    'AYP',
    'AYR',
    'AYS',
    'AYW',
    'BAA',
    'BAB',
    'BAC',
    'BAD',
    'BAG',
    'BAH',
    'BAI',
    'BAJ',
    'BAK',
    'BAL',
    'BAM',
    'BAN',
    'BAR',
    'BAS',
    'BAT',
    'BAU',
    'BAV',
    'BAW',
    'BAY',
    'BBG',
    'BBK',
    'BBL',
    'BBN',
    'BBS',
    'BBW',
    'BCB',
    'BCC',
    'BCE',
    'BCF',
    'BCG',
    'BCH',
    'BCJ',
    'BCK',
    'BCN',
    'BCS',
    'BCU',
    'BCV',
    'BCY',
    'BDA',
    'BDB',
    'BDC',
    'BDG',
    'BDH',
    'BDI',
    'BDK',
    'BDL',
    'BDM',
    'BDN',
    'BDQ',
    'BDS',
    'BDT',
    'BDW',
    'BDY',
    'BEA',
    'BEB',
    'BEC',
    'BEE',
    'BEF',
    'BEG',
    'BEH',
    'BEL',
    'BEM',
    'BEN',
    'BES',
    'BET',
    'BEU',
    'BEV',
    'BEX',
    'BEY',
    'BFD',
    'BFE',
    'BFF',
    'BFN',
    'BFR',
    'BGA',
    'BGD',
    'BGE',
    'BGG',
    'BGH',
    'BGI',
    'BGL',
    'BGM',
    'BGN',
    'BGS',
    'BHC',
    'BHD',
    'BHG',
    'BHI',
    'BHK',
    'BHM',
    'BHO',
    'BHR',
    'BHS',
    'BIA',
    'BIC',
    'BID',
    'BIF',
    'BIK',
    'BIL',
    'BIN',
    'BIO',
    'BIP',
    'BIS',
    'BIW',
    'BIY',
    'BKA',
    'BKC',
    'BKD',
    'BKG',
    'BKH',
    'BKJ',
    'BKL',
    'BKM',
    'BKN',
    'BKO',
    'BKP',
    'BKQ',
    'BKS',
    'BKT',
    'BKW',
    'BLA',
    'BLB',
    'BLD',
    'BLE',
    'BLG',
    'BLH',
    'BLK',
    'BLL',
    'BLM',
    'BLN',
    'BLO',
    'BLP',
    'BLT',
    'BLV',
    'BLW',
    'BLX',
    'BLY',
    'BMB',
    'BMC',
    'BMD',
    'BME',
    'BMF',
    'BMG',
    'BMH',
    'BML',
    'BMN',
    'BMO',
    'BMP',
    'BMR',
    'BMS',
    'BMT',
    'BMV',
    'BMY',
    'BNA',
    'BNC',
    'BND',
    'BNE',
    'BNF',
    'BNG',
    'BNH',
    'BNI',
    'BNL',
    'BNM',
    'BNP',
    'BNR',
    'BNS',
    'BNT',
    'BNV',
    'BNW',
    'BNY',
    'BOA',
    'BOC',
    'BOD',
    'BOE',
    'BOG',
    'BOH',
    'BOM',
    'BON',
    'BOP',
    'BOR',
    'BOT',
    'BPB',
    'BPK',
    'BPN',
    'BPS',
    'BPT',
    'BPW',
    'BRA',
    'BRC',
    'BRE',
    'BRF',
    'BRG',
    'BRH',
    'BRI',
    'BRK',
    'BRL',
    'BRM',
    'BRN',
    'BRO',
    'BRP',
    'BRR',
    'BRS',
    'BRT',
    'BRU',
    'BRV',
    'BRW',
    'BRX',
    'BRY',
    'BSB',
    'BSC',
    'BSD',
    'BSE',
    'BSH',
    'BSI',
    'BSJ',
    'BSK',
    'BSL',
    'BSM',
    'BSN',
    'BSO',
    'BSP',
    'BSR',
    'BSS',
    'BSW',
    'BSY',
    'BTB',
    'BTD',
    'BTE',
    'BTF',
    'BTG',
    'BTH',
    'BTL',
    'BTN',
    'BTO',
    'BTR',
    'BTS',
    'BTT',
    'BTY',
    'BUB',
    'BUC',
    'BUD',
    'BUE',
    'BUG',
    'BUH',
    'BUJ',
    'BUK',
    'BUL',
    'BUO',
    'BUS',
    'BUT',
    'BUU',
    'BUW',
    'BUX',
    'BUY',
    'BVD',
    'BWB',
    'BWD',
    'BWG',
    'BWK',
    'BWN',
    'BWO',
    'BWS',
    'BWT',
    'BXB',
    'BXD',
    'BXH',
    'BXW',
    'BXY',
    'BYA',
    'BYB',
    'BYC',
    'BYD',
    'BYE',
    'BYF',
    'BYI',
    'BYK',
    'BYM',
    'BYN',
    'BYS',
    'CAD',
    'CAG',
    'CAK',
    'CAM',
    'CAN',
    'CAO',
    'CAR',
    'CAT',
    'CAU',
    'CAY',
    'CBB',
    'CBC',
    'CBE',
    'CBG',
    'CBH',
    'CBL',
    'CBN',
    'CBP',
    'CBR',
    'CBS',
    'CBW',
    'CBY',
    'CCC',
    'CCH',
    'CCT',
    'CDB',
    'CDD',
    'CDF',
    'CDI',
    'CDO',
    'CDQ',
    'CDR',
    'CDS',
    'CDT',
    'CDU',
    'CDY',
    'CEA',
    'CED',
    'CEF',
    'CEH',
    'CEL',
    'CES',
    'CET',
    'CEY',
    'CFB',
    'CFC',
    'CFD',
    'CFF',
    'CFH',
    'CFL',
    'CFN',
    'CFO',
    'CFR',
    'CFT',
    'CGD',
    'CGM',
    'CGN',
    'CGW',
    'CHC',
    'CHD',
    'CHE',
    'CHF',
    'CHG',
    'CHH',
    'CHI',
    'CHK',
    'CHL',
    'CHM',
    'CHN',
    'CHO',
    'CHP',
    'CHR',
    'CHT',
    'CHU',
    'CHW',
    'CHX',
    'CHY',
    'CIL',
    'CIM',
    'CIR',
    'CIT',
    'CKH',
    'CKL',
    'CKN',
    'CKS',
    'CKT',
    'CLA',
    'CLC',
    'CLD',
    'CLE',
    'CLG',
    'CLH',
    'CLI',
    'CLJ',
    'CLK',
    'CLL',
    'CLM',
    'CLN',
    'CLP',
    'CLR',
    'CLS',
    'CLU',
    'CLV',
    'CLW',
    'CLY',
    'CMD',
    'CME',
    'CMF',
    'CML',
    'CMN',
    'CMO',
    'CMR',
    'CMY',
    'CNE',
    'CNF',
    'CNG',
    'CNL',
    'CNM',
    'CNN',
    'CNO',
    'CNP',
    'CNR',
    'CNS',
    'CNW',
    'CNY',
    'COB',
    'COH',
    'COI',
    'COL',
    'COM',
    'CON',
    'COO',
    'COP',
    'COS',
    'COT',
    'COV',
    'COW',
    'COY',
    'CPA',
    'CPH',
    'CPK',
    'CPM',
    'CPT',
    'CPW',
    'CPY',
    'CRA',
    'CRB',
    'CRD',
    'CRE',
    'CRF',
    'CRG',
    'CRH',
    'CRI',
    'CRK',
    'CRL',
    'CRM',
    'CRN',
    'CRO',
    'CRR',
    'CRS',
    'CRT',
    'CRU',
    'CRV',
    'CRW',
    'CRY',
    'CSA',
    'CSB',
    'CSD',
    'CSG',
    'CSH',
    'CSK',
    'CSL',
    'CSM',
    'CSN',
    'CSO',
    'CSR',
    'CSS',
    'CST',
    'CSW',
    'CSY',
    'CTF',
    'CTH',
    'CTK',
    'CTL',
    'CTM',
    'CTN',
    'CTO',
    'CTR',
    'CTT',
    'CTW',
    'CUA',
    'CUB',
    'CUD',
    'CUF',
    'CUH',
    'CUM',
    'CUP',
    'CUS',
    'CUW',
    'CUX',
    'CWB',
    'CWC',
    'CWE',
    'CWH',
    'CWL',
    'CWM',
    'CWN',
    'CWS',
    'CWU',
    'CWX',
    'CYB',
    'CYK',
    'CYP',
    'CYS',
    'CYT',
    'DAG',
    'DAK',
    'DAL',
    'DAM',
    'DAN',
    'DAR',
    'DAT',
    'DBC',
    'DBD',
    'DBE',
    'DBG',
    'DBL',
    'DBR',
    'DBY',
    'DCG',
    'DCH',
    'DCT',
    'DCW',
    'DDG',
    'DDK',
    'DDP',
    'DEA',
    'DEE',
    'DEN',
    'DEP',
    'DEW',
    'DFD',
    'DFI',
    'DFR',
    'DGC',
    'DGL',
    'DGS',
    'DGT',
    'DGY',
    'DHM',
    'DHN',
    'DID',
    'DIG',
    'DIN',
    'DIS',
    'DKD',
    'DKG',
    'DKR',
    'DKT',
    'DLG',
    'DLH',
    'DLJ',
    'DLK',
    'DLM',
    'DLR',
    'DLS',
    'DLT',
    'DLW',
    'DLY',
    'DMC',
    'DMF',
    'DMH',
    'DMK',
    'DMP',
    'DMR',
    'DMS',
    'DMY',
    'DND',
    'DNG',
    'DNL',
    'DNM',
    'DNN',
    'DNO',
    'DNS',
    'DNT',
    'DNY',
    'DOC',
    'DOD',
    'DOL',
    'DON',
    'DOR',
    'DOT',
    'DOW',
    'DPD',
    'DPT',
    'DRF',
    'DRG',
    'DRI',
    'DRM',
    'DRN',
    'DRO',
    'DRT',
    'DRU',
    'DSL',
    'DSM',
    'DST',
    'DSY',
    'DTG',
    'DTN',
    'DTW',
    'DUD',
    'DUL',
    'DUM',
    'DUN',
    'DUR',
    'DVC',
    'DVH',
    'DVN',
    'DVP',
    'DVY',
    'DWD',
    'DWL',
    'DWN',
    'DWW',
    'DYC',
    'DYF',
    'DYP',
    'DZY',
    'EAD',
    'EAG',
    'EAL',
    'EAR',
    'EAS',
    'EBA',
    'EBK',
    'EBL',
    'EBN',
    'EBR',
    'EBS',
    'EBT',
    'ECC',
    'ECL',
    'ECR',
    'ECS',
    'EDB',
    'EDG',
    'EDL',
    'EDN',
    'EDP',
    'EDR',
    'EDW',
    'EDY',
    'EFF',
    'EFL',
    'EGF',
    'EGG',
    'EGH',
    'EGN',
    'EGR',
    'EGT',
    'EKL',
    'ELD',
    'ELE',
    'ELG',
    'ELO',
    'ELP',
    'ELR',
    'ELS',
    'ELW',
    'ELY',
    'EMD',
    'EML',
    'EMP',
    'EMS',
    'ENC',
    'ENF',
    'ENL',
    'ENT',
    'EPD',
    'EPH',
    'EPS',
    'ERA',
    'ERD',
    'ERH',
    'ERI',
    'ERL',
    'ESD',
    'ESH',
    'ESL',
    'ESM',
    'EST',
    'ESW',
    'ETC',
    'ETL',
    'EUS',
    'EVE',
    'EWD',
    'EWE',
    'EWR',
    'EWW',
    'EXC',
    'EXD',
    'EXM',
    'EXN',
    'EXR',
    'EXT',
    'EYN',
    'Eye',
    'FAL',
    'FAV',
    'FAZ',
    'FBY',
    'FCN',
    'FEA',
    'FEL',
    'FEN',
    'FER',
    'FFA',
    'FFD',
    'FGH',
    'FGT',
    'FIL',
    'FIN',
    'FIT',
    'FKC',
    'FKG',
    'FKH',
    'FKK',
    'FKW',
    'FLD',
    'FLE',
    'FLF',
    'FLI',
    'FLM',
    'FLN',
    'FLS',
    'FLT',
    'FLW',
    'FLX',
    'FML',
    'FMR',
    'FMT',
    'FNB',
    'FNC',
    'FNH',
    'FNN',
    'FNR',
    'FNT',
    'FNV',
    'FNW',
    'FNY',
    'FOC',
    'FOD',
    'FOG',
    'FOH',
    'FOK',
    'FOR',
    'FOX',
    'FPK',
    'FRB',
    'FRD',
    'FRE',
    'FRF',
    'FRL',
    'FRM',
    'FRN',
    'FRO',
    'FRS',
    'FRT',
    'FRW',
    'FRY',
    'FSB',
    'FSG',
    'FSK',
    'FST',
    'FTM',
    'FTN',
    'FTW',
    'FWY',
    'FXN',
    'FYS',
    'FZH',
    'FZP',
    'FZW',
    'GAL',
    'GAR',
    'GBD',
    'GBK',
    'GBL',
    'GBS',
    'GCH',
    'GCR',
    'GCT',
    'GCW',
    'GDH',
    'GDL',
    'GDN',
    'GDP',
    'GEA',
    'GER',
    'GFD',
    'GFF',
    'GFN',
    'GGJ',
    'GGV',
    'GIG',
    'GIL',
    'GIP',
    'GIR',
    'GKC',
    'GKW',
    'GLC',
    'GLD',
    'GLE',
    'GLF',
    'GLG',
    'GLH',
    'GLM',
    'GLO',
    'GLQ',
    'GLS',
    'GLT',
    'GLY',
    'GLZ',
    'GMB',
    'GMD',
    'GMG',
    'GMN',
    'GMT',
    'GMV',
    'GMY',
    'GNB',
    'GNF',
    'GNH',
    'GNL',
    'GNR',
    'GNT',
    'GNW',
    'GOB',
    'GOD',
    'GOE',
    'GOF',
    'GOL',
    'GOM',
    'GOO',
    'GOR',
    'GOS',
    'GOX',
    'GPK',
    'GPO',
    'GRA',
    'GRB',
    'GRC',
    'GRF',
    'GRK',
    'GRL',
    'GRN',
    'GRO',
    'GRP',
    'GRS',
    'GRT',
    'GRV',
    'GRY',
    'GSD',
    'GSL',
    'GSN',
    'GST',
    'GSW',
    'GSY',
    'GTA',
    'GTH',
    'GTN',
    'GTO',
    'GTR',
    'GTW',
    'GTY',
    'GUI',
    'GUN',
    'GVH',
    'GWE',
    'GWN',
    'GYM',
    'GYP',
    'HAB',
    'HAC',
    'HAD',
    'HAG',
    'HAI',
    'HAL',
    'HAM',
    'HAN',
    'HAP',
    'HAS',
    'HAT',
    'HAV',
    'HAY',
    'HAZ',
    'HBB',
    'HBD',
    'HBN',
    'HBP',
    'HBY',
    'HCB',
    'HCH',
    'HCN',
    'HCT',
    'HDB',
    'HDE',
    'HDF',
    'HDG',
    'HDH',
    'HDL',
    'HDM',
    'HDN',
    'HDW',
    'HDY',
    'HEC',
    'HED',
    'HEI',
    'HEL',
    'HEN',
    'HER',
    'HES',
    'HEV',
    'HEW',
    'HEX',
    'HFD',
    'HFE',
    'HFN',
    'HFS',
    'HFX',
    'HGD',
    'HGF',
    'HGG',
    'HGM',
    'HGN',
    'HGR',
    'HGS',
    'HGT',
    'HGY',
    'HHB',
    'HHD',
    'HHE',
    'HHL',
    'HHY',
    'HIA',
    'HIB',
    'HID',
    'HIG',
    'HIL',
    'HIN',
    'HIP',
    'HIR',
    'HIT',
    'HKC',
    'HKH',
    'HKM',
    'HKN',
    'HKW',
    'HLB',
    'HLC',
    'HLD',
    'HLE',
    'HLF',
    'HLG',
    'HLI',
    'HLL',
    'HLM',
    'HLN',
    'HLR',
    'HLS',
    'HLU',
    'HLW',
    'HLY',
    'HMC',
    'HMD',
    'HME',
    'HML',
    'HMM',
    'HMN',
    'HMP',
    'HMS',
    'HMT',
    'HMY',
    'HNA',
    'HNB',
    'HNC',
    'HND',
    'HNF',
    'HNH',
    'HNK',
    'HNL',
    'HNT',
    'HNW',
    'HNX',
    'HOC',
    'HOD',
    'HOH',
    'HOK',
    'HOL',
    'HON',
    'HOO',
    'HOP',
    'HOR',
    'HOT',
    'HOU',
    'HOV',
    'HOW',
    'HOX',
    'HOY',
    'HOZ',
    'HPA',
    'HPD',
    'HPE',
    'HPL',
    'HPN',
    'HPQ',
    'HPT',
    'HRD',
    'HRH',
    'HRL',
    'HRM',
    'HRN',
    'HRO',
    'HRR',
    'HRS',
    'HRW',
    'HRY',
    'HSB',
    'HSC',
    'HSD',
    'HSG',
    'HSL',
    'HST',
    'HSW',
    'HSY',
    'HTC',
    'HTE',
    'HTF',
    'HTH',
    'HTN',
    'HTO',
    'HTW',
    'HTY',
    'HUB',
    'HUD',
    'HUL',
    'HUN',
    'HUP',
    'HUR',
    'HUS',
    'HUT',
    'HUY',
    'HVF',
    'HVN',
    'HWB',
    'HWC',
    'HWD',
    'HWH',
    'HWI',
    'HWK',
    'HWM',
    'HWN',
    'HWY',
    'HXM',
    'HYB',
    'HYC',
    'HYD',
    'HYH',
    'HYK',
    'HYM',
    'HYN',
    'HYR',
    'HYS',
    'HYT',
    'HYW',
    'HYZ',
    'IBM',
    'IFD',
    'IFI',
    'IGD',
    'ILK',
    'INC',
    'INE',
    'ING',
    'INH',
    'INK',
    'INP',
    'INR',
    'INS',
    'INT',
    'INV',
    'IPS',
    'IRL',
    'IRV',
    'ISL',
    'ISP',
    'IVR',
    'IVY',
    'JEQ',
    'JHN',
    'JOH',
    'JOR',
    'KBC',
    'KBF',
    'KBK',
    'KBN',
    'KBW',
    'KBX',
    'KCG',
    'KCK',
    'KDB',
    'KDG',
    'KDY',
    'KEH',
    'KEI',
    'KEL',
    'KEM',
    'KEN',
    'KET',
    'KEY',
    'KGE',
    'KGH',
    'KGL',
    'KGM',
    'KGN',
    'KGP',
    'KGS',
    'KGT',
    'KGX',
    'KID',
    'KIL',
    'KIN',
    'KIR',
    'KIT',
    'KIV',
    'KKB',
    'KKD',
    'KKH',
    'KKM',
    'KKN',
    'KKS',
    'KLD',
    'KLM',
    'KLN',
    'KLY',
    'KMH',
    'KMK',
    'KML',
    'KMP',
    'KMS',
    'KNA',
    'KND',
    'KNE',
    'KNF',
    'KNG',
    'KNI',
    'KNL',
    'KNN',
    'KNO',
    'KNR',
    'KNS',
    'KNT',
    'KNU',
    'KPA',
    'KPT',
    'KRK',
    'KSL',
    'KSN',
    'KSW',
    'KTH',
    'KTL',
    'KTN',
    'KTW',
    'KVP',
    'KWB',
    'KWD',
    'KWG',
    'KWL',
    'KWN',
    'KYL',
    'KYN',
    'LAC',
    'LAD',
    'LAI',
    'LAK',
    'LAM',
    'LAN',
    'LAP',
    'LAR',
    'LAS',
    'LAW',
    'LAY',
    'LBG',
    'LBK',
    'LBO',
    'LBR',
    'LBT',
    'LBZ',
    'LCB',
    'LCC',
    'LCG',
    'LCH',
    'LCK',
    'LCL',
    'LCN',
    'LCS',
    'LDN',
    'LDS',
    'LDY',
    'LEA',
    'LED',
    'LEE',
    'LEH',
    'LEI',
    'LEL',
    'LEM',
    'LEN',
    'LEO',
    'LER',
    'LES',
    'LET',
    'LEU',
    'LEW',
    'LEY',
    'LFD',
    'LGB',
    'LGD',
    'LGE',
    'LGF',
    'LGG',
    'LGJ',
    'LGK',
    'LGM',
    'LGN',
    'LGO',
    'LGS',
    'LGW',
    'LHA',
    'LHD',
    'LHE',
    'LHL',
    'LHM',
    'LHO',
    'LHS',
    'LHW',
    'LIC',
    'LID',
    'LIH',
    'LIN',
    'LIP',
    'LIS',
    'LIT',
    'LIV',
    'LKE',
    'LLA',
    'LLC',
    'LLD',
    'LLE',
    'LLF',
    'LLG',
    'LLH',
    'LLI',
    'LLJ',
    'LLL',
    'LLM',
    'LLN',
    'LLO',
    'LLS',
    'LLT',
    'LLV',
    'LLW',
    'LLY',
    'LMR',
    'LMS',
    'LNB',
    'LND',
    'LNG',
    'LNK',
    'LNR',
    'LNW',
    'LNY',
    'LNZ',
    'LOB',
    'LOC',
    'LOF',
    'LOH',
    'LOO',
    'LOS',
    'LOT',
    'LOW',
    'LPG',
    'LPR',
    'LPT',
    'LPW',
    'LPY',
    'LRB',
    'LRD',
    'LRG',
    'LSK',
    'LSN',
    'LST',
    'LSW',
    'LSY',
    'LTG',
    'LTK',
    'LTL',
    'LTM',
    'LTN',
    'LTP',
    'LTS',
    'LTT',
    'LTV',
    'LUD',
    'LUT',
    'LUX',
    'LVC',
    'LVG',
    'LVJ',
    'LVM',
    'LVN',
    'LVT',
    'LWH',
    'LWR',
    'LWS',
    'LWT',
    'LYC',
    'LYD',
    'LYE',
    'LYM',
    'LYP',
    'LYT',
    'LZB',
    'MAC',
    'MAG',
    'MAI',
    'MAL',
    'MAN',
    'MAO',
    'MAR',
    'MAS',
    'MAT',
    'MAU',
    'MAX',
    'MAY',
    'MBK',
    'MBR',
    'MCB',
    'MCE',
    'MCH',
    'MCM',
    'MCN',
    'MCO',
    'MCV',
    'MDB',
    'MDE',
    'MDG',
    'MDL',
    'MDN',
    'MDS',
    'MDW',
    'MEC',
    'MEL',
    'MEN',
    'MEO',
    'MEP',
    'MER',
    'MES',
    'MEV',
    'MEW',
    'MEX',
    'MFA',
    'MFF',
    'MFH',
    'MFL',
    'MFT',
    'MGM',
    'MGN',
    'MHM',
    'MHR',
    'MHS',
    'MIA',
    'MIC',
    'MIH',
    'MIJ',
    'MIK',
    'MIL',
    'MIM',
    'MIN',
    'MIR',
    'MIS',
    'MKC',
    'MKM',
    'MKR',
    'MKT',
    'MLB',
    'MLD',
    'MLF',
    'MLG',
    'MLH',
    'MLM',
    'MLN',
    'MLR',
    'MLS',
    'MLT',
    'MLW',
    'MLY',
    'MMO',
    'MMT',
    'MNC',
    'MNE',
    'MNG',
    'MNN',
    'MNP',
    'MNR',
    'MOB',
    'MOG',
    'MON',
    'MOO',
    'MOR',
    'MOS',
    'MOT',
    'MPK',
    'MPL',
    'MPT',
    'MRB',
    'MRD',
    'MRF',
    'MRM',
    'MRN',
    'MRP',
    'MRR',
    'MRS',
    'MRT',
    'MRY',
    'MSD',
    'MSH',
    'MSK',
    'MSL',
    'MSN',
    'MSO',
    'MSR',
    'MSS',
    'MST',
    'MSW',
    'MTA',
    'MTB',
    'MTC',
    'MTG',
    'MTH',
    'MTL',
    'MTM',
    'MTN',
    'MTO',
    'MTP',
    'MTS',
    'MTV',
    'MUB',
    'MUF',
    'MUI',
    'MUK',
    'MVL',
    'MYB',
    'MYH',
    'MYL',
    'MYT',
    'MZH',
    'NAN',
    'NAR',
    'NAY',
    'NBA',
    'NBC',
    'NBN',
    'NBR',
    'NBT',
    'NBW',
    'NBY',
    'NCE',
    'NCK',
    'NCL',
    'NCM',
    'NCT',
    'NDL',
    'NEH',
    'NEI',
    'NEL',
    'NEM',
    'NES',
    'NET',
    'NEW',
    'NFD',
    'NFL',
    'NFN',
    'NGT',
    'NHD',
    'NHE',
    'NHL',
    'NHY',
    'NIT',
    'NLN',
    'NLR',
    'NLS',
    'NLT',
    'NLW',
    'NMC',
    'NMK',
    'NMN',
    'NMP',
    'NMT',
    'NNG',
    'NNP',
    'NNT',
    'NOA',
    'NOD',
    'NOR',
    'NOT',
    'NPD',
    'NQU',
    'NQY',
    'NRB',
    'NRC',
    'NRD',
    'NRN',
    'NRT',
    'NRW',
    'NSD',
    'NSG',
    'NSH',
    'NTA',
    'NTB',
    'NTC',
    'NTH',
    'NTL',
    'NTN',
    'NTR',
    'NUF',
    'NUM',
    'NUN',
    'NUT',
    'NVH',
    'NVM',
    'NVN',
    'NVR',
    'NWA',
    'NWB',
    'NWD',
    'NWE',
    'NWI',
    'NWM',
    'NWN',
    'NWP',
    'NWR',
    'NWT',
    'NWX',
    'NXG',
    'OBN',
    'OCK',
    'OHL',
    'OKE',
    'OKL',
    'OKM',
    'OKN',
    'OLD',
    'OLF',
    'OLM',
    'OLT',
    'OLW',
    'OLY',
    'OMS',
    'OPK',
    'ORE',
    'ORN',
    'ORP',
    'ORR',
    'OTF',
    'OUN',
    'OUS',
    'OUT',
    'OVE',
    'OVR',
    'OXF',
    'OXN',
    'OXS',
    'OXT',
    'PAD',
    'PAL',
    'PAN',
    'PAR',
    'PAT',
    'PAW',
    'PBL',
    'PBO',
    'PBR',
    'PBY',
    'PCD',
    'PCN',
    'PDG',
    'PDW',
    'PEA',
    'PEB',
    'PEG',
    'PEM',
    'PEN',
    'PER',
    'PES',
    'PET',
    'PEV',
    'PEW',
    'PFL',
    'PFM',
    'PFR',
    'PFY',
    'PGM',
    'PGN',
    'PHG',
    'PHR',
    'PIL',
    'PIN',
    'PIT',
    'PKG',
    'PKS',
    'PKT',
    'PLC',
    'PLD',
    'PLE',
    'PLG',
    'PLK',
    'PLM',
    'PLN',
    'PLS',
    'PLT',
    'PLU',
    'PLW',
    'PLY',
    'PMA',
    'PMB',
    'PMD',
    'PMG',
    'PMH',
    'PMP',
    'PMR',
    'PMS',
    'PMT',
    'PMW',
    'PNA',
    'PNC',
    'PNE',
    'PNF',
    'PNL',
    'PNM',
    'PNR',
    'PNS',
    'PNW',
    'PNY',
    'PNZ',
    'POK',
    'POL',
    'PON',
    'POO',
    'POP',
    'POR',
    'POT',
    'PPD',
    'PPK',
    'PPL',
    'PRA',
    'PRB',
    'PRE',
    'PRH',
    'PRL',
    'PRN',
    'PRP',
    'PRR',
    'PRS',
    'PRT',
    'PRU',
    'PRW',
    'PRY',
    'PSC',
    'PSE',
    'PSH',
    'PSL',
    'PSN',
    'PST',
    'PSW',
    'PTA',
    'PTB',
    'PTC',
    'PTD',
    'PTF',
    'PTG',
    'PTH',
    'PTK',
    'PTL',
    'PTM',
    'PTR',
    'PTT',
    'PTW',
    'PUL',
    'PUO',
    'PUR',
    'PUT',
    'PWE',
    'PWL',
    'PWW',
    'PWY',
    'PYC',
    'PYG',
    'PYJ',
    'PYL',
    'PYN',
    'PYP',
    'PYT',
    'QBR',
    'QPK',
    'QPW',
    'QRB',
    'QRP',
    'QUI',
    'QYD',
    'RAD',
    'RAI',
    'RAM',
    'RAN',
    'RAV',
    'RAY',
    'RBR',
    'RBS',
    'RCC',
    'RCD',
    'RCE',
    'RDA',
    'RDB',
    'RDC',
    'RDD',
    'RDF',
    'RDG',
    'RDH',
    'RDM',
    'RDN',
    'RDR',
    'RDS',
    'RDT',
    'RDW',
    'REC',
    'RED',
    'REE',
    'REI',
    'RET',
    'RFD',
    'RFY',
    'RGL',
    'RGT',
    'RGW',
    'RHD',
    'RHI',
    'RHL',
    'RHM',
    'RHO',
    'RHY',
    'RIC',
    'RID',
    'RIL',
    'RIS',
    'RKT',
    'RLG',
    'RLN',
    'RMB',
    'RMC',
    'RMD',
    'RMF',
    'RML',
    'RNF',
    'RNH',
    'RNM',
    'RNR',
    'ROB',
    'ROC',
    'ROE',
    'ROG',
    'ROL',
    'ROM',
    'ROO',
    'ROS',
    'ROW',
    'RRB',
    'RSB',
    'RSG',
    'RSH',
    'RTN',
    'RTR',
    'RTY',
    'RUA',
    'RUE',
    'RUF',
    'RUG',
    'RUN',
    'RUS',
    'RUT',
    'RVB',
    'RVN',
    'RWC',
    'RYB',
    'RYD',
    'RYE',
    'RYH',
    'RYN',
    'RYP',
    'RYR',
    'RYS',
    'SAA',
    'SAD',
    'SAE',
    'SAF',
    'SAH',
    'SAJ',
    'SAL',
    'SAM',
    'SAN',
    'SAR',
    'SAS',
    'SAT',
    'SAU',
    'SAV',
    'SAW',
    'SAX',
    'SAY',
    'SBE',
    'SBF',
    'SBJ',
    'SBK',
    'SBM',
    'SBP',
    'SBR',
    'SBS',
    'SBT',
    'SBU',
    'SBV',
    'SBY',
    'SCA',
    'SCB',
    'SCF',
    'SCG',
    'SCH',
    'SCR',
    'SCS',
    'SCT',
    'SCU',
    'SCY',
    'SDA',
    'SDB',
    'SDE',
    'SDF',
    'SDG',
    'SDH',
    'SDL',
    'SDM',
    'SDN',
    'SDP',
    'SDR',
    'SDW',
    'SDY',
    'SEA',
    'SEB',
    'SEC',
    'SED',
    'SEE',
    'SEF',
    'SEG',
    'SEH',
    'SEL',
    'SEM',
    'SEN',
    'SER',
    'SES',
    'SET',
    'SEV',
    'SFA',
    'SFD',
    'SFL',
    'SFN',
    'SFO',
    'SFR',
    'SGB',
    'SGE',
    'SGL',
    'SGM',
    'SGN',
    'SGR',
    'SHA',
    'SHC',
    'SHD',
    'SHE',
    'SHF',
    'SHH',
    'SHI',
    'SHJ',
    'SHL',
    'SHM',
    'SHN',
    'SHO',
    'SHP',
    'SHR',
    'SHS',
    'SHT',
    'SHU',
    'SHW',
    'SHY',
    'SIA',
    'SIC',
    'SID',
    'SIE',
    'SIH',
    'SIL',
    'SIN',
    'SIP',
    'SIT',
    'SIV',
    'SJP',
    'SJS',
    'SKE',
    'SKG',
    'SKI',
    'SKK',
    'SKM',
    'SKN',
    'SKS',
    'SKW',
    'SLA',
    'SLB',
    'SLD',
    'SLH',
    'SLK',
    'SLL',
    'SLO',
    'SLQ',
    'SLR',
    'SLS',
    'SLT',
    'SLV',
    'SLW',
    'SLY',
    'SMA',
    'SMB',
    'SMD',
    'SMG',
    'SMH',
    'SMK',
    'SML',
    'SMN',
    'SMO',
    'SMR',
    'SMT',
    'SMY',
    'SNA',
    'SND',
    'SNE',
    'SNF',
    'SNG',
    'SNH',
    'SNI',
    'SNK',
    'SNL',
    'SNN',
    'SNO',
    'SNR',
    'SNS',
    'SNT',
    'SNW',
    'SNY',
    'SOA',
    'SOB',
    'SOC',
    'SOE',
    'SOG',
    'SOH',
    'SOK',
    'SOL',
    'SOM',
    'SON',
    'SOO',
    'SOP',
    'SOR',
    'SOT',
    'SOU',
    'SOV',
    'SOW',
    'SPA',
    'SPB',
    'SPF',
    'SPH',
    'SPI',
    'SPK',
    'SPN',
    'SPO',
    'SPP',
    'SPR',
    'SPS',
    'SPT',
    'SPU',
    'SPY',
    'SQE',
    'SQH',
    'SQU',
    'SRA',
    'SRC',
    'SRD',
    'SRF',
    'SRG',
    'SRH',
    'SRI',
    'SRL',
    'SRN',
    'SRO',
    'SRR',
    'SRS',
    'SRT',
    'SRU',
    'SRY',
    'SSC',
    'SSD',
    'SSE',
    'SSM',
    'SSS',
    'SST',
    'STA',
    'STC',
    'STD',
    'STE',
    'STF',
    'STG',
    'STH',
    'STJ',
    'STK',
    'STL',
    'STM',
    'STN',
    'STO',
    'STP',
    'STR',
    'STS',
    'STT',
    'STU',
    'STV',
    'STW',
    'SUC',
    'SUD',
    'SUG',
    'SUM',
    'SUN',
    'SUO',
    'SUP',
    'SUR',
    'SUT',
    'SUU',
    'SUY',
    'SVB',
    'SVG',
    'SVK',
    'SVL',
    'SVR',
    'SVS',
    'SWA',
    'SWD',
    'SWE',
    'SWG',
    'SWI',
    'SWK',
    'SWL',
    'SWM',
    'SWN',
    'SWO',
    'SWP',
    'SWR',
    'SWS',
    'SWT',
    'SWY',
    'SXY',
    'SYA',
    'SYB',
    'SYD',
    'SYH',
    'SYL',
    'SYS',
    'TAB',
    'TAC',
    'TAD',
    'TAF',
    'TAI',
    'TAL',
    'TAM',
    'TAP',
    'TAT',
    'TAU',
    'TAY',
    'TBD',
    'TBR',
    'TBT',
    'TBW',
    'TBY',
    'TDU',
    'TEA',
    'TED',
    'TEE',
    'TEN',
    'TEO',
    'TEY',
    'TFC',
    'TGM',
    'TGS',
    'THA',
    'THB',
    'THC',
    'THD',
    'THE',
    'THH',
    'THI',
    'THL',
    'THO',
    'THS',
    'THT',
    'THU',
    'THW',
    'TIL',
    'TIP',
    'TIR',
    'TIS',
    'TLB',
    'TLC',
    'TLH',
    'TLK',
    'TLS',
    'TMC',
    'TNA',
    'TNF',
    'TNN',
    'TNP',
    'TNS',
    'TOB',
    'TOD',
    'TOK',
    'TOL',
    'TOM',
    'TON',
    'TOO',
    'TOP',
    'TOT',
    'TPB',
    'TPC',
    'TPN',
    'TQY',
    'TRA',
    'TRB',
    'TRD',
    'TRE',
    'TRF',
    'TRH',
    'TRI',
    'TRM',
    'TRN',
    'TRO',
    'TRR',
    'TRS',
    'TRU',
    'TRY',
    'TTF',
    'TTH',
    'TTN',
    'TUH',
    'TUL',
    'TUR',
    'TUT',
    'TVP',
    'TWI',
    'TWN',
    'TWY',
    'TYC',
    'TYG',
    'TYL',
    'TYS',
    'TYW',
    'UCK',
    'UDD',
    'UHA',
    'UHL',
    'ULC',
    'ULL',
    'ULP',
    'ULV',
    'UMB',
    'UNI',
    'UPH',
    'UPL',
    'UPM',
    'UPT',
    'UPW',
    'URM',
    'UTY',
    'UWL',
    'VAL',
    'VIC',
    'VIR',
    'VXH',
    'WAC',
    'WAD',
    'WAE',
    'WAF',
    'WAL',
    'WAM',
    'WAN',
    'WAO',
    'WAR',
    'WAS',
    'WAT',
    'WBC',
    'WBL',
    'WBO',
    'WBP',
    'WBQ',
    'WBR',
    'WBY',
    'WCB',
    'WCH',
    'WCK',
    'WCL',
    'WCM',
    'WCP',
    'WCR',
    'WCX',
    'WCY',
    'WDB',
    'WDD',
    'WDE',
    'WDH',
    'WDL',
    'WDM',
    'WDN',
    'WDO',
    'WDS',
    'WDT',
    'WDU',
    'WEA',
    'WED',
    'WEE',
    'WEL',
    'WEM',
    'WET',
    'WEY',
    'WFF',
    'WFH',
    'WFI',
    'WFJ',
    'WFL',
    'WFN',
    'WGA',
    'WGC',
    'WGN',
    'WGR',
    'WGT',
    'WGV',
    'WGW',
    'WHA',
    'WHC',
    'WHD',
    'WHG',
    'WHI',
    'WHL',
    'WHM',
    'WHN',
    'WHP',
    'WHR',
    'WHS',
    'WHT',
    'WHY',
    'WIC',
    'WID',
    'WIH',
    'WIJ',
    'WIL',
    'WIM',
    'WIN',
    'WIV',
    'WKB',
    'WKD',
    'WKF',
    'WKG',
    'WKI',
    'WKK',
    'WKM',
    'WLC',
    'WLD',
    'WLE',
    'WLF',
    'WLG',
    'WLI',
    'WLM',
    'WLN',
    'WLP',
    'WLS',
    'WLT',
    'WLV',
    'WLW',
    'WLY',
    'WMA',
    'WMB',
    'WMC',
    'WMD',
    'WME',
    'WMG',
    'WMI',
    'WML',
    'WMN',
    'WMR',
    'WMS',
    'WMW',
    'WNC',
    'WND',
    'WNF',
    'WNG',
    'WNH',
    'WNL',
    'WNM',
    'WNN',
    'WNP',
    'WNR',
    'WNS',
    'WNT',
    'WNW',
    'WNY',
    'WOB',
    'WOF',
    'WOH',
    'WOK',
    'WOL',
    'WOM',
    'WON',
    'WOO',
    'WOR',
    'WOS',
    'WPE',
    'WPL',
    'WRB',
    'WRE',
    'WRH',
    'WRK',
    'WRL',
    'WRM',
    'WRN',
    'WRP',
    'WRS',
    'WRT',
    'WRU',
    'WRW',
    'WRX',
    'WRY',
    'WSA',
    'WSB',
    'WSE',
    'WSF',
    'WSH',
    'WSL',
    'WSM',
    'WSR',
    'WST',
    'WSU',
    'WSW',
    'WTA',
    'WTB',
    'WTC',
    'WTE',
    'WTG',
    'WTH',
    'WTI',
    'WTL',
    'WTM',
    'WTN',
    'WTO',
    'WTR',
    'WTS',
    'WTY',
    'WVF',
    'WVH',
    'WWA',
    'WWC',
    'WWD',
    'WWI',
    'WWO',
    'WWR',
    'WWW',
    'WXC',
    'WYB',
    'WYE',
    'WYL',
    'WYM',
    'WYQ',
    'WYT',
    'XFG',
    'YAE',
    'YAL',
    'YAT',
    'YEO',
    'YET',
    'YMH',
    'YNW',
    'YOK',
    'YRD',
    'YRK',
    'YRM',
    'YRT',
    'YSM',
    'YSR',
    'YVJ',
    'YVP',
    'ZBB',
    'ZCW',
    'ZFD',
    'ZLW',
  ]
  private shortPlatforms = [
    { value: 'e.should travel in the front coach of the train', title: 'front coach' },
    { value: 'm.should travel in the front,platform.s.2,e.coaches of the train', title: 'front 2 coaches' },
    { value: 'm.should travel in the front,platform.s.3,e.coaches of the train', title: 'front 3 coaches' },
    { value: 'm.should travel in the front,platform.s.4,e.coaches of the train', title: 'front 4 coaches' },
    { value: 'm.should travel in the front,platform.s.5,e.coaches of the train', title: 'front 5 coaches' },
    { value: 'm.should travel in the front,platform.s.6,e.coaches of the train', title: 'front 6 coaches' },
    { value: 'm.should travel in the front,platform.s.7,e.coaches of the train', title: 'front 7 coaches' },
    { value: 'm.should travel in the front,platform.s.8,e.coaches of the train', title: 'front 8 coaches' },
    { value: 'm.should travel in the front,platform.s.9,e.coaches of the train', title: 'front 9 coaches' },
    { value: 'm.should travel in the front,platform.s.10,e.coaches of the train', title: 'front 10 coaches' },
    { value: 'm.should travel in the front,platform.s.11,e.coaches of the train', title: 'front 11 coaches' },
    { value: 'm.should travel in the front,platform.s.12,e.coaches of the train', title: 'front 12 coaches' },
    { value: 'm.should travel in the middle coach of the train', title: 'middle coach' },
    { value: 'm.should travel in the middle,platform.s.2,e.coaches of the train', title: 'middle 2 coaches' },
    { value: 'm.should travel in the middle,platform.s.3,e.coaches of the train', title: 'middle 3 coaches' },
    { value: 'm.should travel in the middle,platform.s.4,e.coaches of the train', title: 'middle 4 coaches' },
    { value: 'm.should travel in the middle,platform.s.5,e.coaches of the train', title: 'middle 5 coaches' },
    { value: 'm.should travel in the middle,platform.s.6,e.coaches of the train', title: 'middle 6 coaches' },
    { value: 'm.should travel in the middle,platform.s.7,e.coaches of the train', title: 'middle 7 coaches' },
    { value: 'm.should travel in the middle,platform.s.8,e.coaches of the train', title: 'middle 8 coaches' },
    { value: 'm.should travel in the middle,platform.s.9,e.coaches of the train', title: 'middle 9 coaches' },
    { value: 'm.should travel in the middle,platform.s.10,e.coaches of the train', title: 'middle 10 coaches' },
    { value: 'm.should travel in the middle,platform.s.11,e.coaches of the train', title: 'middle 11 coaches' },
    { value: 'm.should travel in the middle,platform.s.12,e.coaches of the train', title: 'middle 12 coaches' },
    { value: 'm.should travel in the rear coach of the train', title: 'rear coach' },
    { value: 'm.should travel in the rear,platform.s.2,e.coaches of the train', title: 'rear 2 coaches' },
    { value: 'm.should travel in the rear,platform.s.3,e.coaches of the train', title: 'rear 3 coaches' },
    { value: 'm.should travel in the rear,platform.s.4,e.coaches of the train', title: 'rear 4 coaches' },
    { value: 'm.should travel in the rear,platform.s.5,e.coaches of the train', title: 'rear 5 coaches' },
    { value: 'm.should travel in the rear,platform.s.6,e.coaches of the train', title: 'rear 6 coaches' },
    { value: 'm.should travel in the rear,platform.s.7,e.coaches of the train', title: 'rear 7 coaches' },
    { value: 'm.should travel in the rear,platform.s.8,e.coaches of the train', title: 'rear 8 coaches' },
    { value: 'm.should travel in the rear,platform.s.9,e.coaches of the train', title: 'rear 9 coaches' },
    { value: 'm.should travel in the rear,platform.s.10,e.coaches of the train', title: 'rear 10 coaches' },
    { value: 'm.should travel in the rear,platform.s.11,e.coaches of the train', title: 'rear 11 coaches' },
    { value: 'm.should travel in the rear,platform.s.12,e.coaches of the train', title: 'rear 12 coaches' },
  ]

  private getValueForShortPlatform(title: string): string | null {
    return this.shortPlatforms.find(p => p.title === title)?.value ?? null
  }

  readonly customAnnouncementTabs: Record<string, CustomAnnouncementTab> = {
    nextTrain: {
      name: 'Next train',
      component: CustomAnnouncementPane,
      props: {
        presets: this.announcementPresets.nextTrain,
        playHandler: this.playNextTrainAnnouncement.bind(this),
        options: {
          chime: {
            name: 'Chime',
            type: 'select',
            default: 'four',
            options: [
              // { title: '3 chimes', value: 'three' },
              { title: '4 chimes', value: 'four' },
              { title: 'No chime', value: 'none' },
            ],
          },
          platform: {
            name: 'Platform',
            default: this.platforms[0],
            options: this.platforms.map(p => ({ title: `Platform ${p}`, value: p })),
            type: 'select',
          },
          hour: {
            name: 'Hour',
            default: '07',
            options: [
              '00 - midnight',
              '01',
              '02',
              '03',
              '04',
              '05',
              '06',
              '07',
              '08',
              '09',
              '10',
              '11',
              '12',
              '13',
              '14',
              '15',
              '16',
              '17',
              '18',
              '19',
              '20',
              '21',
              '22',
              '23',
            ].map(h => ({ title: h, value: h })),
            type: 'select',
          },
          min: {
            name: 'Minute',
            default: '33',
            options: ['00 - hundred', '00 - hundred-hours']
              .concat(new Array(59).fill(0).map((_, i) => (i + 2).toString()))
              .map(m => ({ title: m.toString().padStart(2, '0'), value: m.toString().padStart(2, '0') })),
            type: 'select',
          },
          toc: {
            name: 'TOC',
            default: '',
            options: [{ title: 'None', value: '' }].concat(this.AVAILABLE_TOCS.map(m => ({ title: m, value: m.toLowerCase() }))),
            type: 'select',
          },
          terminatingStationCode: {
            name: 'Terminating station',
            default: this.stations[0],
            options: AllStationsTitleValueMap.filter(s => this.stations.includes(s.value)),
            type: 'select',
          },
          vias: {
            name: '',
            type: 'custom',
            component: CallingAtSelector,
            props: {
              availableStations: this.stations,
              selectLabel: 'Via points',
              placeholder: 'Add a via point...',
              heading: 'Via... (optional)',
            },
            default: [],
          },
          callingAt: {
            name: '',
            type: 'custom',
            component: CallingAtSelector,
            props: {
              availableStations: this.stations,
              enableShortPlatforms: this.shortPlatforms,
              enableRequestStops: true,
            },
            default: [],
          },
          coaches: {
            name: 'Coach count',
            default: '8 coaches',
            options: [
              '1 coach',
              '2 coaches',
              '3 coaches',
              '4 coaches',
              '5 coaches',
              '6 coaches',
              '7 coaches',
              '8 coaches',
              '9 coaches',
              '10 coaches',
              '11 coaches',
              '12 coaches',
            ].map(c => ({ title: c, value: c })),
            type: 'select',
          },
        },
      },
    },
    // standingTrain: {
    //   name: 'Standing train',
    //   component: CustomAnnouncementPane,
    //   props: {
    //     // presets: AnnouncementPresets.standingTrain,
    //     playHandler: this.playStandingTrainAnnouncement.bind(this),
    //     options: {
    //       chime: {
    //         name: 'Chime',
    //         type: 'select',
    //         default: 'none',
    //         options: [
    //           { title: '3 chimes', value: '3' },
    //           { title: '4 chimes', value: '4' },
    //           { title: 'No chime', value: 'none' },
    //         ],
    //       },
    //       currentStation: {
    //         name: 'Current station',
    //         default: AVAILABLE_station.m.filter(x => AVAILABLE_station.e.includes(x as any))[0],
    //         options: AllStationsTitleValueMap.filter(
    //           s => AVAILABLE_station.e.includes(s.value as any) && AVAILABLE_station.m.includes(s.value as any),
    //         ),
    //         type: 'select',
    //       },
    //       platform: {
    //         name: 'Platform',
    //         default: AVAILABLE_ALPHANUMBERS[0],
    //         options: AVAILABLE_ALPHANUMBERS.map(p => ({ title: `Platform ${p}`, value: p })),
    //         type: 'select',
    //       },
    //       hour: {
    //         name: 'Hour',
    //         default: AVAILABLE_HOURS[0],
    //         options: AVAILABLE_HOURS.map(h => ({ title: h, value: h })),
    //         type: 'select',
    //       },
    //       min: {
    //         name: 'Minute',
    //         default: AVAILABLE_MINUTES[0],
    //         options: AVAILABLE_MINUTES.map(m => ({ title: m, value: m })),
    //         type: 'select',
    //       },
    //       toc: {
    //         name: 'TOC',
    //         default: this.AVAILABLE_TOCS[0].toLowerCase(),
    //         options: this.AVAILABLE_TOCS.map(m => ({ title: m, value: m.toLowerCase() })),
    //         type: 'select',
    //       },
    //       terminatingStationCode: {
    //         name: 'Terminating station',
    //         default: this.stations[1],
    //         options: AllStationsTitleValueMap.filter(s => this.station.includes(s.value)),
    //         type: 'select',
    //       },
    //       via: {
    //         name: 'Via... (optional)',
    //         default: 'none',
    //         options: [{ title: 'NONE', value: 'none' }, ...AllStationsTitleValueMap.filter(s => this.station.includes(s.value))],
    //         type: 'select',
    //       },
    //       callingAt: {
    //         name: '',
    //         type: 'custom',
    //         component: CallingAtSelector,
    //         props: {
    //           availableStations: AVAILABLE_station.high,
    //         },
    //         default: [],
    //       },
    //       coaches: {
    //         name: 'Coach count',
    //         default: AVAILABLE_NUMBERS.filter(x => parseInt(x) > 1)[0],
    //         options: AVAILABLE_NUMBERS.filter(x => parseInt(x) > 1).map(c => ({ title: c, value: c })),
    //         type: 'select',
    //       },
    //     },
    //   },
    // },
    announcementButtons: {
      name: 'Announcement buttons',
      component: CustomButtonPane,
      props: {
        buttonSections: {
          General: [
            {
              label: '4 chimes',
              play: this.playAudioFiles.bind(this, ['sfx - four chimes']),
              download: this.playAudioFiles.bind(this, ['sfx - four chimes'], true),
            },
          ],
          Emergency: [
            {
              label: 'Newton Aycliffe chemical emergency',
              play: this.playAudioFiles.bind(this, [
                's.this is an emergency announcement',
                'e.for customers at newton aycliffe station',
                { id: 's.there is an emergency at a nearby chemical works', opts: { delayStart: 300 } },
                { id: 'm.please leave the station by the ramp from platform 1', opts: { delayStart: 300 } },
                'e.and turning left make your way to a position of safety',
                { id: 'e.listen for announcement by the emergency services', opts: { delayStart: 300 } },
              ]),
              download: this.playAudioFiles.bind(
                this,
                [
                  's.this is an emergency announcement',
                  'e.for customers at newton aycliffe station',
                  { id: 's.there is an emergency at a nearby chemical works', opts: { delayStart: 300 } },
                  { id: 'm.please leave the station by the ramp from platform 1', opts: { delayStart: 300 } },
                  'e.and turning left make your way to a position of safety',
                  { id: 'e.listen for announcement by the emergency services', opts: { delayStart: 300 } },
                ],
                true,
              ),
            },
            {
              label: 'Castleford chemical emergency',
              play: this.playAudioFiles.bind(this, [
                's.this is an emergency announcement',
                'e.for customers at castleford station',
                { id: 's.there is an emergency at a nearby chemical works', opts: { delayStart: 300 } },
                { id: 'm.please leave the station by the main exit', opts: { delayStart: 300 } },
                'e.and proceed to the town centre',
                { id: 'e.listen for announcement by the emergency services', opts: { delayStart: 300 } },
              ]),
              download: this.playAudioFiles.bind(
                this,
                [
                  's.this is an emergency announcement',
                  'e.for customers at castleford station',
                  { id: 's.there is an emergency at a nearby chemical works', opts: { delayStart: 300 } },
                  { id: 'm.please leave the station by the main exit', opts: { delayStart: 300 } },
                  'e.and proceed to the town centre',
                  { id: 'e.listen for announcement by the emergency services', opts: { delayStart: 300 } },
                ],
                true,
              ),
            },
          ],
        },
      },
    },
  }
}
